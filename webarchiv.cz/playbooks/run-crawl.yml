---
- hosts: crawlers

  vars:
    confpath: "/opt/heritrix/jobs/CZ-2016-12/"
    jobname: "CZ Domain Crawl 2016 12"
    description: "Celoplošná sklizeň českých domén v prosinci roku 2016"
    prefix: "CZ-2016-12"
    store: "/mnt/archives/14/2016/CZ-2016-12/"
    state: "/mnt/archives/14/crawl-states/{{ ansible_hostname }}/state/"
    diversion: "/mnt/archives/14/CZ-2016-12-prefetch-diversions/"
    history: "/opt/heritrix/jobs/CZ-2015-12-CrawlHistory/"

  environment:
    JAVA_HOME: '{{ java_home }}'
    HERITRIX_HOME: '{{ heritrix_home }}'
    JAVA_OPTS: '{{ java_opts }}'

  tasks:
    
  - name: "Directory for crawl exists: {{ store }}"
    file: path={{ store }} state="directory"

  - name: "Directory for crawl configuration and reports exist: {{ confpath }}"
    file: path={{ confpath }} state="directory"

  - name: "Deploying crawler-beans.cxml from template to: {{ confpath }}"
    template: src="templates/crawler-beans.cxml.j2" dest="{{ confpath }}crawler-beans.cxml"

  - name: "Copying files needed for crawl to: {{ confpath }}"
    copy: src="files/" dest={{ confpath }}

  - name: "Directory for WARCs exists and is writable for group: {{ store }}"
    file: path="{{ store }}" state="directory" mode="g+w"

  - name: "Directory for URL diversion exists and is writable for group: {{ diversion }}"
    file: path="{{ diversion }}" state="directory" mode="g+w"

  #  - name: 'Clone Crawler configuration from github'
  #    git:
  #      repo: 'git://github.com/webarchivCZ/Crawler-config.git'
  #      dest: '/opt/heritrix/jobs/Crawler-config'


  - name: 'ansible.adhoc.keystore exists'
    command: '{{ java_home }}/bin/keytool -keystore {{ heritrix_home }}/ansible-adhoc.keystore -storepass {{ heritrix_ssl_storepass }} -keypass {{ heritrix_ssl_keypass }} -alias adhoc -genkey -keyalg RSA -dname "CN=Heritrix Ad-Hoc HTTPS Certificate" -validity 3650'
    args:
      creates: '{{ heritrix_home }}/ansible-adhoc.keystore'

  - name: 'default adhoc.keystore exists'
    stat:
      path: '{{ heritrix_home }}/adhoc.keystore'
    register: heritrix_keystore

  - name: "Check for Heritrix process"
    shell: "ps aux |grep '{{ java_home }}/bin/java -Dheritrix.home={{ heritrix_home }}'|grep -v grep"
    register: heritrix_started
    ignore_errors: true

  - name: "Run Heritrix with default keystore if not already running"
    shell: "{{ heritrix_home }}/bin/heritrix -b {{ ansible_host }} --web-admin {{ heritrix_www_user }}:{{ heritrix_www_password }} --web-port {{ crawl_port }}"
    when: 
      - heritrix_started|failed
      - heritrix_keystore.stat.exists == True

  - name: "Run Heritrix with ansible-adhoc.keystore if not already running"
    shell: "{{ heritrix_home }}/bin/heritrix -b {{ ansible_host }} --web-admin {{ heritrix_www_user }}:{{ heritrix_www_password }} --web-port {{ crawl_port }} -s {{ heritrix_home }}/ansible-adhoc.keystore,{{ heritrix_ssl_storepass }},{{ heritrix_ssl_keypass }}"
    when: 
      - heritrix_started|failed
      - heritrix_keystore.stat.exists == False

  - name: "Add crawl job path: {{ confpath }}"
    shell: "curl -v -d 'action=add&addpath={{ confpath }}' -k -u {{ heritrix_www_user }}:{{ heritrix_www_password }} --anyauth --location 'https://{{ ansible_host }}:{{ crawl_port }}/engine'"

  - name: "Create crawl job: {{ prefix }}"
    shell: "curl -v -d 'createpath={{ prefix }}&action=create' -k -u {{ heritrix_www_user }}:{{ heritrix_www_password }} --anyauth --location 'https://{{ ansible_host }}:{{ crawl_port }}/engine'"

  - name: "Launch job: {{ prefix }} | Launch is paused, should be started from web interface"
    shell: "curl -v -d 'action=launch' -k -u {{ heritrix_www_user }}:{{ heritrix_www_password }} --anyauth --location https://{{ ansible_host}}:{{ crawl_port }}/engine/job/{{ prefix }}"
